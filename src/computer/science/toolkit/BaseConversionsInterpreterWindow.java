/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computer.science.toolkit;

import computer.science.toolkit.toolbox.BaseConversionsInterpreter;


/**
 *
 * @author daniel
 */
public class BaseConversionsInterpreterWindow extends javax.swing.JFrame {

    BaseConversionsInterpreter BaseCon = new BaseConversionsInterpreter();
    
    /**
     * Creates new form BaseConversionsInterpreterWindow
     */
    public BaseConversionsInterpreterWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputTextBox = new javax.swing.JTextField();
        iBaseSpinner = new javax.swing.JSpinner();
        oBaseSpinner = new javax.swing.JSpinner();
        outputTextBox = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        evaluatedLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        inputTextBox.setText("Input a number");

        iBaseSpinner.setModel(new javax.swing.SpinnerNumberModel(2, 2, 35, 1));
        iBaseSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iBaseSpinnerStateChanged(evt);
            }
        });

        oBaseSpinner.setModel(new javax.swing.SpinnerNumberModel(2, 2, 35, 1));
        oBaseSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                oBaseSpinnerStateChanged(evt);
            }
        });

        outputTextBox.setText("Output is ");
        outputTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputTextBoxActionPerformed(evt);
            }
        });

        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        evaluatedLabel.setText("Evaluated as");

        jLabel1.setText("The base of the inputted number:");

        jLabel2.setText("The base of the outputted number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputTextBox)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oBaseSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 235, Short.MAX_VALUE))
            .addComponent(outputTextBox)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(evaluatedLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(iBaseSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(inputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluatedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(iBaseSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(oBaseSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iBaseSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iBaseSpinnerStateChanged
        // TODO add your handling code here:
        BaseCon = new BaseConversionsInterpreter(inputTextBox.getText(), (int)iBaseSpinner.getValue(), (int)oBaseSpinner.getValue());
        if(BaseCon.getInput() != ""){
            evaluatedLabel.setText("Evaluated as " + BaseCon.cleanse(inputTextBox.getText()));
            outputTextBox.setText(BaseCon.convert());   
        }
    }//GEN-LAST:event_iBaseSpinnerStateChanged

    private void oBaseSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_oBaseSpinnerStateChanged
        // TODO add your handling code here:
        BaseCon = new BaseConversionsInterpreter(inputTextBox.getText(), (int)iBaseSpinner.getValue(), (int)oBaseSpinner.getValue());
        if(BaseCon.getInput() != ""){
            evaluatedLabel.setText("Evaluated as " + BaseCon.cleanse(inputTextBox.getText()));
            outputTextBox.setText(BaseCon.convert());   
        }
    }//GEN-LAST:event_oBaseSpinnerStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BaseCon = new BaseConversionsInterpreter(inputTextBox.getText(), (int)iBaseSpinner.getValue(), (int)oBaseSpinner.getValue());
        if(BaseCon.getInput() != ""){
            evaluatedLabel.setText("Evaluated as " + BaseCon.cleanse(inputTextBox.getText()));
            outputTextBox.setText(BaseCon.convert());   
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void outputTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputTextBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseConversionsInterpreterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseConversionsInterpreterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseConversionsInterpreterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseConversionsInterpreterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseConversionsInterpreterWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel evaluatedLabel;
    private javax.swing.JSpinner iBaseSpinner;
    private javax.swing.JTextField inputTextBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner oBaseSpinner;
    private javax.swing.JTextField outputTextBox;
    // End of variables declaration//GEN-END:variables
}
